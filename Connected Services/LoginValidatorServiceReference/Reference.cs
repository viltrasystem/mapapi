//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LoginValidatorServiceReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInformation", Namespace="http://schemas.datacontract.org/2004/07/ManageUser")]
    internal partial class UserInformation : object
    {
        
        private string DisplayNameField;
        
        private string EmailField;
        
        private bool IsAdminField;
        
        private int UserDnnIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DisplayName
        {
            get
            {
                return this.DisplayNameField;
            }
            set
            {
                this.DisplayNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool IsAdmin
        {
            get
            {
                return this.IsAdminField;
            }
            set
            {
                this.IsAdminField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int UserDnnId
        {
            get
            {
                return this.UserDnnIdField;
            }
            set
            {
                this.UserDnnIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MobileResetPasswordObj", Namespace="http://schemas.datacontract.org/2004/07/ManageUser")]
    internal partial class MobileResetPasswordObj : object
    {
        
        private string MessageField;
        
        private bool StateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool State
        {
            get
            {
                return this.StateField;
            }
            set
            {
                this.StateField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MobileResetPwUser", Namespace="http://schemas.datacontract.org/2004/07/ManageUser")]
    internal partial class MobileResetPwUser : object
    {
        
        private int UserDnnIdField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int UserDnnId
        {
            get
            {
                return this.UserDnnIdField;
            }
            set
            {
                this.UserDnnIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                this.UserNameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoginValidatorServiceReference.ILoginValidator")]
    internal interface ILoginValidator
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginValidator/ValidateUser", ReplyAction="http://tempuri.org/ILoginValidator/ValidateUserResponse")]
        System.Threading.Tasks.Task<bool> ValidateUserAsync(string username, string pwd, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginValidator/GetDnnUserId", ReplyAction="http://tempuri.org/ILoginValidator/GetDnnUserIdResponse")]
        System.Threading.Tasks.Task<LoginValidatorServiceReference.UserInformation> GetDnnUserIdAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginValidator/SendResetPassowrdLink", ReplyAction="http://tempuri.org/ILoginValidator/SendResetPassowrdLinkResponse")]
        System.Threading.Tasks.Task<LoginValidatorServiceReference.MobileResetPasswordObj> SendResetPassowrdLinkAsync(string email, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginValidator/ResetPasswordAutoLogin", ReplyAction="http://tempuri.org/ILoginValidator/ResetPasswordAutoLoginResponse")]
        System.Threading.Tasks.Task<LoginValidatorServiceReference.MobileResetPwUser> ResetPasswordAutoLoginAsync(int resetPwId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    internal interface ILoginValidatorChannel : LoginValidatorServiceReference.ILoginValidator, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    internal partial class LoginValidatorClient : System.ServiceModel.ClientBase<LoginValidatorServiceReference.ILoginValidator>, LoginValidatorServiceReference.ILoginValidator
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public LoginValidatorClient() : 
                base(LoginValidatorClient.GetDefaultBinding(), LoginValidatorClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ILoginValidator.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LoginValidatorClient(EndpointConfiguration endpointConfiguration) : 
                base(LoginValidatorClient.GetBindingForEndpoint(endpointConfiguration), LoginValidatorClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LoginValidatorClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(LoginValidatorClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LoginValidatorClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(LoginValidatorClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LoginValidatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<bool> ValidateUserAsync(string username, string pwd, string ipAddress)
        {
            return base.Channel.ValidateUserAsync(username, pwd, ipAddress);
        }
        
        public System.Threading.Tasks.Task<LoginValidatorServiceReference.UserInformation> GetDnnUserIdAsync(string username)
        {
            return base.Channel.GetDnnUserIdAsync(username);
        }
        
        public System.Threading.Tasks.Task<LoginValidatorServiceReference.MobileResetPasswordObj> SendResetPassowrdLinkAsync(string email, string ipAddress)
        {
            return base.Channel.SendResetPassowrdLinkAsync(email, ipAddress);
        }
        
        public System.Threading.Tasks.Task<LoginValidatorServiceReference.MobileResetPwUser> ResetPasswordAutoLoginAsync(int resetPwId)
        {
            return base.Channel.ResetPasswordAutoLoginAsync(resetPwId);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ILoginValidator))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ILoginValidator))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:56679/DesktopModules/WCFServices/LoginValidator.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return LoginValidatorClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ILoginValidator);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return LoginValidatorClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ILoginValidator);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_ILoginValidator,
        }
    }
}
